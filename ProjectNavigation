from Tkinter import *


class TitleBar(Frame):

    def __init__(self, title, *args, **kwargs):
        Frame.__init__(self, *args, **kwargs)

        self.title = Label(self, text=title, anchor=CENTER, background="gray")

        img = PhotoImage(file="close.gif")
        self.close_img = img.subsample(9, 9)
        self.close = Button(self, image=self.close_img)

        img = PhotoImage(file="minimize.gif")
        self.min_img = img.subsample(9, 9)
        self.minimize = Button(self, image=self.min_img)

        img = PhotoImage(file="maximize.gif")
        self.max_img = img.subsample(9, 9)
        self.maximize = Button(self, image=self.max_img)

        self.close.pack(side=RIGHT)
        self.maximize.pack(side=RIGHT)
        self.minimize.pack(side=RIGHT)

        self.title.pack(side=LEFT, fill="x", expand=True)

    def onMinimize(self, w):
        w.pack_forget()



class Window(Frame):

    def __init__(self, title, *args, **kwargs):
        Frame.__init__(self, *args, **kwargs)
        self.title_bar = TitleBar(title)
        self.title_bar.pack(side=TOP, fill="x", expand=True)


class Window(Frame):

    def __init__(self, title, *args, **kwargs):
        self.title_bar = TitleBar(title)
        self.title_bar.pack(side=TOP, fill="x", expand=True)


class ProjectNavigation(Frame):

    def label_clicked(self, event):

        if self.FolderOpenA==False:

            self.folderpic = PhotoImage(file="Openf.gif")
            self.sized_pic = self.folderpic.subsample(5, 5)
            self.label["image"] = self.sized_pic
            self.FolderOpenA=True

        else:
            self.folderpic = PhotoImage(file="Closef.gif")
            self.sized_pic = self.folderpic.subsample(5, 5)
            self.label["image"] = self.sized_pic
            self.FolderOpenA = False

    def label_clickedB(self, event):

        if self.FolderOpenB==False:

            self.folderpic2 = PhotoImage(file="Openf.gif")
            self.sized_pic2 = self.folderpic2.subsample(5, 5)
            self.label2["image"]=self.sized_pic2
            self.FolderOpenB=True
        else:
            self.folderpic2 = PhotoImage(file="Closef.gif")
            self.sized_pic2 = self.folderpic2.subsample(5, 5)
            self.label2["image"]=self.sized_pic2
            self.FolderOpenB=False

    def label_clickedC(self, event):

        if self.FolderOpenC==False:

            self.folderpic3 = PhotoImage(file="Openf.gif")
            self.sized_pic3 = self.folderpic3.subsample(5, 5)
            self.label3["image"]=self.sized_pic3
            self.FolderOpenC=True
        else:
            self.folderpic3 = PhotoImage(file="Closef.gif")
            self.sized_pic3 = self.folderpic3.subsample(5, 5)
            self.label3["image"]=self.sized_pic3
            self.FolderOpenC=False

    def __init__(self, *args, **kwargs):
        Frame.__init__(self, *args, **kwargs)

        self.FolderOpenA=False;
        self.FolderOpenB=False;
        self.FolderOpenC = False;

        self.label = Label(self,text="WorkspaceX")
        self.label.bind()
        self.label.pack()

        self.folderpic = PhotoImage(file="Closef.gif")
        self.sized_pic = self.folderpic.subsample(5, 5)
        self.label = Label(self, text="ProjectA",compound=LEFT,pady=10,padx=10)
        self.label.bind("<Button-1>", self.label_clicked)
        self.label["image"]=self.sized_pic
        self.label.pack()

        self.label2 = Label(self, text="ProjectB",compound=LEFT,pady=10,padx=10)
        self.label2.bind("<Button-1>", self.label_clickedB)
        self.folderpic2 = PhotoImage(file="Closef.gif")
        self.sized_pic2 = self.folderpic2.subsample(5, 5)
        self.label2["image"]=self.sized_pic2
        self.label2.pack()

        self.label3 = Label(self, text="ProjectC",compound=LEFT,pady=10,padx=10)
        self.label3.bind("<Button-1>", self.label_clickedC)
        self.folderpic3 = PhotoImage(file="Closef.gif")
        self.sized_pic3 = self.folderpic3.subsample(5, 5)
        self.label3["image"]=self.sized_pic3
        self.label3.pack()


root = Tk()
root.title("Project Navigation")

w = Window("Project Navigation",root)
pj = ProjectNavigation(root)

pj.pack()
#suppose to work but doesn't
#w.pack()

mainloop()


